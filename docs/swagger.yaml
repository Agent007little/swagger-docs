basePath: /
definitions:
  main.Address:
    properties:
      city:
        type: string
      house:
        type: string
      lat:
        type: string
      lon:
        type: string
      street:
        type: string
    type: object
  main.GeocodeRequest:
    properties:
      lat:
        type: string
      lng:
        type: string
    type: object
  main.GeocodeResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/main.Address'
        type: array
    type: object
  main.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  main.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  main.SearchRequest:
    properties:
      query:
        type: string
    type: object
  main.SearchResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/main.Address'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Апишка по задаче на свагер
  title: Kata Academy API
  version: "1.0"
paths:
  /api/address/geocode:
    post:
      consumes:
      - application/json
      description: Возвращает информацию об адрессе по координатам
      parameters:
      - description: Координаты для геокодирования
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/main.GeocodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ с адресами
          schema:
            $ref: '#/definitions/main.GeocodeResponse'
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get address
      tags:
      - search
  /api/address/search:
    post:
      consumes:
      - application/json
      description: Возвращает информацию об адрессе
      parameters:
      - description: Запрос для поиска адреса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/main.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SearchResponse'
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get address
      tags:
      - search
  /api/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя и возвращает JWT-токен
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Failed to generate token
          schema:
            type: string
        "403":
          description: Invalid request
          schema:
            type: string
      summary: Вход пользователя
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "409":
          description: User already exists
          schema:
            type: string
        "500":
          description: Failed to hash password
          schema:
            type: string
      summary: Регистрация пользователя
      tags:
      - auth
swagger: "2.0"
